/* $Id$ */

ARG_WITH("cairo", "Cairo Graphics Library Bindings", "no");

if (PHP_CAIRO != "no") {
	var PHP_CAIRO_SRC_ARRAY = glob(configure_module_dirname + "/src/*.c");
	var PHP_CAIRO_SOURCES="";
	for (var i=0; i<PHP_CAIRO_SRC_ARRAY.length; ++i) {
		var basename = FSO.GetFileName(PHP_CAIRO_SRC_ARRAY[i]);
		PHP_CAIRO_SOURCES = PHP_CAIRO_SOURCES + " " + basename;
	}
	if (CHECK_HEADER_ADD_INCLUDE("cairo/cairo.h", "CFLAGS_CAIRO", PHP_CAIRO + "\\include", null, true) &&
		CHECK_HEADER_ADD_INCLUDE("ft2build.h", "CFLAGS_CAIRO", PHP_CAIRO + ";" + PHP_PHP_BUILD + "\\include" + ";" + PHP_PHP_BUILD + "\\include\\freetype")) {
		/* Check for static lib first, because that will need an extra define */
		if (CHECK_LIB("cairo_a.lib", "cairo", PHP_CAIRO + "\\lib")) {
			if (CHECK_LIB("libpng_a.lib", "cairo", PHP_CAIRO + "\\lib")) {
				CHECK_HEADER_ADD_INCLUDE("png.h", "CFLAGS_CAIRO", PHP_CAIRO + ";" + PHP_PHP_BUILD + "\\include" + ";" + PHP_PHP_BUILD + "\\include\\png");
			}
			if (CHECK_LIB("freetype_a.lib", "cairo", PHP_CAIRO + "\\lib")) {
				CHECK_HEADER_ADD_INCLUDE("freetype/freetype.h", "CFLAGS_CAIRO", PHP_CAIRO + "\\include", null, true);
				AC_DEFINE("HAVE_FREETYPE", 1);
                ADD_FLAG("CFLAGS_CAIRO", "/D HAVE_FREETYPE");
				if (CHECK_LIB("fontconfig.lib", "cairo", PHP_CAIRO + "\\lib") &&
					CHECK_HEADER_ADD_INCLUDE("fontconfig/fontconfig.h", "CFLAGS_CAIRO", PHP_CAIRO + "\\include", null, true)) {
					AC_DEFINE("CAIRO_HAS_FT_FONT", 1);
				}
			}
			if (CHECK_LIB("Gdi32.lib", "cairo", PHP_CAIRO + "\\lib")) {
				AC_DEFINE("HAVE_WIN32_FONT", 1);
                ADD_FLAG("CFLAGS_CAIRO", "/D HAVE_WIN32_FONT");
			}

			ADD_SOURCES(configure_module_dirname + "/src", PHP_CAIRO_SOURCES, "cairo");
			EXTENSION("cairo", "src/cairo.c");
			ADD_FLAG("CFLAGS_CAIRO", "/D CAIRO_WIN32_STATIC_BUILD=1");

			AC_DEFINE("HAVE_CAIRO", 1);
			PHP_INSTALL_HEADERS("ext/cairo", "src/php_cairo_api.h");
		} else if (CHECK_LIB("cairo.lib", "cairo", PHP_CAIRO + "\\lib")) {
			if (CHECK_LIB("libpng_a.lib", "cairo", PHP_CAIRO + "\\lib")) {
				CHECK_HEADER_ADD_INCLUDE("png.h", "CFLAGS_CAIRO", PHP_CAIRO + ";" + PHP_PHP_BUILD + "\\include" + ";" + PHP_PHP_BUILD + "\\include\\png");
			}
			if (CHECK_LIB("freetype_a.lib", "cairo", PHP_CAIRO + "\\lib")) {
				CHECK_HEADER_ADD_INCLUDE("freetype/freetype.h", "CFLAGS_CAIRO", PHP_CAIRO + "\\include", null, true);
				AC_DEFINE("HAVE_FREETYPE", 1);
                ADD_FLAG("CFLAGS_CAIRO", "/D HAVE_FREETYPE");
				if (CHECK_LIB("fontconfig.lib", "cairo", PHP_CAIRO + "\\lib") &&
					CHECK_HEADER_ADD_INCLUDE("fontconfig/fontconfig.h", "CFLAGS_CAIRO", PHP_CAIRO + "\\include", null, true)) {
					AC_DEFINE("CAIRO_HAS_FT_FONT", 1);
				}
			}
			if (CHECK_LIB("Gdi32.lib", "cairo", PHP_CAIRO + "\\lib")) {
				AC_DEFINE("HAVE_WIN32_FONT", 1);
                ADD_FLAG("CFLAGS_CAIRO", "/D HAVE_WIN32_FONT");
			}

			ADD_SOURCES(configure_module_dirname + "/src", PHP_CAIRO_SOURCES, "cairo");
			EXTENSION("cairo", "src/cairo.c");

			AC_DEFINE("HAVE_CAIRO", 1);
			PHP_INSTALL_HEADERS("ext/cairo", "src/php_cairo_api.h");
		} else {
			WARNING('Could not find cairo.lib or cairo_a.lib; skipping');
		}
	} else {
		WARNING('Could not find cairo.h; skipping');
	}
}
